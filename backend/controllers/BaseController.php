<?php
// +----------------------------------------------------------------------
// | B5YiiCMF
// +----------------------------------------------------------------------
// | Author: 李恒 <357145480@qq.com>
// +----------------------------------------------------------------------
namespace backend\controllers;

use backend\models\LoginForm;
use common\helpers\commonApi;
use common\services\MenuService;
use yii\helpers\Url;
use yii\web\Controller;
use Yii;

/**
 * 后端通用父类
 * Class BaseController
 * @package backend\controllers
 */
class BaseController extends Controller
{
    public $service;

    public $view_group='';
    /**
     * 构造函数
     * BaseController constructor.
     */
    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        $this->initSystemConst();
    }

    /**
     * 初始化系统常量
     */
    private function initSystemConst()
    {
        defined('IS_GET') or define('IS_GET', Yii::$app->request->isGet);
        defined('IS_POST') or define('IS_POST', Yii::$app->request->isPost);
        defined('IS_AJAX') or define('IS_AJAX', Yii::$app->request->isAjax);
        defined('IS_PJAX') or define('IS_PJAX', Yii::$app->request->isPjax);
        defined('IS_PUT') or define('IS_PUT', Yii::$app->request->isPut);
        defined('IS_DELETE') or define('IS_DELETE', Yii::$app->request->isDelete);
        defined('REQUEST_METHOD') or define('REQUEST_METHOD', strtoupper(Yii::$app->request->method));
        defined('PAGE_LIMIT') or define('PAGE_LIMIT', 10);
        defined('MODULES_NAME') or define('MODULES_NAME', 'backend');
        defined('IMG_URL') or define('IMG_URL',Yii::getAlias('@appweb'));
    }

    /**
     * 定义控制器名和方法名，并分配到视图，登陆检测，权限检测
     * @param \yii\base\Action $action
     * @return bool
     * @throws \yii\web\BadRequestHttpException
     */
    public function beforeAction($action)
    {
        if(parent::beforeAction($action)){
            $controller=Yii::$app->controller->id;
            $action=Yii::$app->controller->action->id;
            defined('CONTROLLER_NAME') or define('CONTROLLER_NAME', $controller);
            defined('ACTION_NAME') or define('ACTION_NAME', $action);

            //登录判断
            $notLoginConArr = ['public'];
            if(Yii::$app->user->isGuest && !in_array(strtolower($controller),$notLoginConArr)){
                return $this->actionError('请先登录',['public/login']);
            }

            //cookie登录判断，YII登录信息有但是自己定义的session中无数据
            $this->cookieLogin();

            //锁屏判断
            $islock=$this->checkLock();
            if($islock){
                return $this->actionError('锁屏中，无法此操作',['common/lockscreen']);
            }

            //权限判断
            $hasPerms = $this->checkAuth();
            if(!$hasPerms){
                return $this->actionError('无权访问',['public/noauth']);
            }

            if(IS_GET && !IS_AJAX){
                Yii::$app->view->params['group']=strtolower(MODULES_NAME);
                Yii::$app->view->params['app']=strtolower(CONTROLLER_NAME);
                Yii::$app->view->params['act']=strtolower(ACTION_NAME);
            }
            return true;
        }
        return false;
    }

    /**
     * 判断锁屏
     * @return bool
     */
    private function checkLock(){
        $islock=Yii::$app->session->get('islock');
        if(!$islock) return false;
        //节点标识

        $controller_name = strtolower(CONTROLLER_NAME);
        $action_name = strtolower(ACTION_NAME);
        $permission = 'admin:' . $controller_name . ':' . $action_name;
        if($permission=='admin:common:lockscreen' || $permission=='admin:public:logout'){
            return false;
        }
        return true;
    }

    /**
     * 若开启了cookie登录，则在session缺失时的处理
     * @return bool
     * @throws \Exception
     */
    public function cookieLogin(){
        if(Yii::$app->user->isGuest) return false;
        $userid=commonApi::adminLoginInfo('info.id');
        if($userid && $userid===Yii::$app->user->getId()){
            return true;
        }
        (new LoginForm())->loginMySession(Yii::$app->user->identity->toArray());
        return true;
    }

    /**
     * 权限检测
     * @return bool
     * @throws \Exception
     */
    public function checkAuth()
    {
        $adminId=Yii::$app->user->getId();
        if ($adminId==1) return true;
        //检测权限
        $controller_name = strtolower(CONTROLLER_NAME);
        $action_name = strtolower(ACTION_NAME);
        $permission = 'admin:' . $controller_name . ':' . $action_name;

        //不走授权的控制器及、方法及节点
        $notAuthController = ['public', 'common'];
        $notAuthAction = ['tree'];
        $notAuthPermission=['admin:index:index','admin:index:home'];
        if (in_array($controller_name, $notAuthController) || in_array($action_name, $notAuthAction) || in_array($permission,$notAuthPermission)) {
            return true;
        }

        //获取登录时的授权菜单Id
        $menuList = commonApi::adminLoginInfo('menu');
        if (empty($menuList)) {
            return false;
        }

        //获取节点信息
        $menuInfo = (new MenuService())->info([['perms' => $permission]], true);
        //节点不存在或禁用
        if (!$menuInfo || !$menuInfo['status']) return false;

        if (in_array($menuInfo['id'], $menuList)) return true;
        return false;
    }

    /**
     * beforeAction发生错误时的跳转
     * @param string $msg
     * @param string $url
     * @param int $code
     * @return bool
     */
    public function actionError($msg='',$url='',$code=-1){
        $msg=$msg?$msg:'发生错误';
        if(Yii::$app->request->isGet && !Yii::$app->request->isAjax){
            if($url){
                $url=is_array($url)?$url:(array)$url;
            }else{
                $url=['public/fail','msg'=>$msg];
            }
            Yii::$app->response->redirect($url);
        }else{
            $url=$url?Url::toRoute($url):'';
            Yii::$app->response->data =commonApi::message($msg,false,[],$code,$url);
        }
        return false;
    }
    /**
     * 跳转到错误页
     * @param string $msg
     * @param int $code
     * @return string
     */
    public function toError(string $msg = '发生错误了', int $code = 400)
    {
        $data = ['msg' => $msg, 'code' => $code];
        return $this->render('/public/fail', $data);
    }

    /**
     * 公共首页
     * @return string
     */
    public function actionIndex()
    {
        if (IS_POST) {
            return $this->service->getList();
        }else{
            $data = Yii::$app->request->get();
            return $this->render('',['input'=>$data]);
        }
    }

    /**
     * 公共添加页
     * @return string
     */
    public function actionAdd()
    {
        if (IS_POST) {
            $argList = func_get_args();
            $data = isset($argList[0]) ? $argList[0] : [];
            return $this->service->add($data);
        }
        $data = Yii::$app->request->get();
        return $this->render('',['input'=>$data]);
    }

    /**
     * 公共编辑页
     * @return string
     */
    public function actionEdit()
    {
        if (IS_POST) {
            $argList = func_get_args();
            $data = isset($argList[0]) ? $argList[0] : [];
            return $this->service->edit($data);
        }
        $info = [];
        $data = Yii::$app->request->get();
        if(isset($data['id']) && $data['id']){
            $info = $this->service->info($data['id']);
        }
        if(empty($info)){
            return $this->toError('参数或信息错误');
        }
        $res=$this->edit_before($info,$data);
        if($res===true){
            return $this->render('',['info'=>$info,'input'=>$data]);
        }else{
            return $res;
        }
    }
    public function edit_before($info,$data){
        return true;
    }
    /**
     * 删除
     * @return mixed
     */
    public function actionDrop()
    {
        return $this->service->drop();
    }

    /**
     * 修改状态
     * @return mixed
     */
    public function actionSetstatus()
    {
        return $this->service->setStatus();
    }

    /**
     * 清除缓存
     * @return mixed
     */
    public function actionDelcache(){
        return $this->service->delcache();
    }

    /**
     * 自动加载视图
     * @param string $view
     * @param array $params
     * @return string
     */
    public function render($view='', $params = [])
    {
        Yii::$app->response->format=\yii\web\Response::FORMAT_HTML;
        if(empty($view)){
            $view=strtolower(ACTION_NAME);
            if($this->view_group){
                $view=$this->view_group.'/'.$view;
            }
        }
        return parent::render($view, $params); // TODO: Change the autogenerated stub
    }
}
