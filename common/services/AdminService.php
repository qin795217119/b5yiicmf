<?php
// +----------------------------------------------------------------------
// | B5LaravelCMF
// +----------------------------------------------------------------------
// | Author: 李恒 <357145480@qq.com>
// +----------------------------------------------------------------------
namespace common\services;

use common\models\Admin;
use yii\helpers\ArrayHelper;
use common\helpers\commonApi;

/**
 * 人员管理
 * Class AdminService
 * @package App\Services
 */
class AdminService extends BaseService
{
    public function __construct(bool $loadValidate = true)
    {
        $this->model = new Admin();
        $this->validate = $loadValidate;
    }

    /**
     * 获取人员列表 基于组织架构
     * @param bool $all
     * @return array
     */
    public function getList($all = false)
    {
        $where=[];
        $structId=\Yii::$app->request->post('structId',0);
        if($structId>0){
            $userList=(new AdminStructService())->getUsersByStruct($structId);
            if(!$userList){
                return commonApi::message('操作成功', true, [], 0, '', ['total' => 0]);
            }else{
                $where=[['id' => $userList]];
            }
        }
        return parent::getList($all,$where); // TODO: Change the autogenerated stub
    }

    public function after_getList($list)
    {
        if($list){
            foreach ($list as $key=>$val){
                $structNameStr='';
                $roleNameStr='';
                $structList=(new AdminStructService())->getListByAdmin($val['id']);
                $roleList=(new AdminRoleService())->getListByAdmin($val['id']);
                if($structList){
                    $structNameArr=ArrayHelper::getColumn($structList, 'name');
                    $structNameStr=implode(',',$structNameArr);
                }
                if($roleList){
                    $roleNameArr=ArrayHelper::getColumn($roleList, 'name');
                    $roleNameStr=implode(',',$roleNameArr);
                }
                $val['rolename']=$roleNameStr;
                $val['structname']=$structNameStr;
                $list[$key]=$val;
            }
        }
        return $list;
    }

    /**
     * 人员信息返回关联信息
     * @param $id
     * @param bool $isArray
     * @param bool $extend
     * @return mixed
     */
    public function info($id, $isArray = true, $extend=true)
    {
        $info=parent::info($id, false);
        if($info){
            if($extend){
                //组织架构信息
                $structIdStr='';
                $structNameStr='';
                $structList=$info->structs;
                $roleList=$info->roles;
                $info=$info->toArray();
                if($structList){
                    $structIdArr = ArrayHelper::getColumn($structList, 'id');
                    $structNameArr=ArrayHelper::getColumn($structList, 'name');

                    $structIdStr=implode(',',$structIdArr);
                    $structNameStr=implode(',',$structNameArr);
                }
                $info['structid']=$structIdStr;
                $info['structname']=$structNameStr;
                $info['structlist']=$structList?:[];

                //角色分组
                $roleIdStr='';
                $roleNameStr='';
                if($roleList){
                    $roleIdArr = ArrayHelper::getColumn($roleList, 'id');
                    $roleNameArr=ArrayHelper::getColumn($roleList, 'name');

                    $roleIdStr=implode(',',$roleIdArr);
                    $roleNameStr=implode(',',$roleNameArr);
                }

                $info['roleid']=$roleIdStr;
                $info['rolename']=$roleNameStr;
                $info['rolelist']=$roleList?:[];
            }else{
                $info=$info->toArray();
            }
        }
        return $info?:[];
    }

    /**
     * 超管不可以删除
     * @return array
     */
    public function drop()
    {
        $data = \Yii::$app->request->post();
        if ($data && isset($data['ids'])) {
            $id = $data['ids'];
            if (is_array($id)) {
                $idArr = $id;
            } else {
                $id = trim($id, ',');
                $idArr = explode(',', $id);
            }
            if (in_array(1, $idArr)) {
                return commonApi::message('超级管理员无法删除', false);
            }
        }
        return parent::drop(); // TODO: Change the autogenerated stub
    }
    /**
     * 删除用户后 删除对应的分组和组织
     * @param $data
     * @return bool
     */
    public function after_drop($data)
    {
        (new AdminStructService())->drop($data,'admin_id');
        (new AdminRoleService())->drop($data,'admin_id');
        return parent::after_drop($data); // TODO: Change the autogenerated stub
    }

    public function after_add($data)
    {
        $struct=\Yii::$app->request->post('struct','');
        (new AdminStructService(false))->update($data['id'],$struct);

        $roles=\Yii::$app->request->post('roles','');
        (new AdminRoleService(false))->update($data['id'],$roles);

        return parent::after_add($data); // TODO: Change the autogenerated stub
    }

    public function edit()
    {
        if(IS_POST){
            $data = \Yii::$app->request->post();
            unset($data['struct']);
            unset($data['role']);
            unset($data['roles']);
            return parent::edit($data); // TODO: Change the autogenerated stub
        }
        return parent::edit(); // TODO: Change the autogenerated stub
    }
    public function after_edit($data)
    {
        $struct=\Yii::$app->request->post('struct','');
        (new AdminStructService(false))->update($data['id'],$struct);

        $roles=\Yii::$app->request->post('roles','');
        (new AdminRoleService(false))->update($data['id'],$roles);

        return parent::after_edit($data); // TODO: Change the autogenerated stub
    }
}
